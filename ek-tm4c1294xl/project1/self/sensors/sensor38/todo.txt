void    RunProfile38(void);
void    RunAuth38(void);
void    MakeExtended4T(void);
#include "../../serial/monitor.h"
void    MonitorOpen(uchar  ibPrt);

  MonitorOpen(0);
  Delay(500);
  RunAuth38(); // MakeExtended4T(); //RunAuth38(); // RunProfile38();



  if (1+1 == 2) return GetTime2(tiZero, true);
  
  
      uchar ii[4];
    memset(&ii, 0, sizeof(ii));


    ii[0] = 0x01;
    ii[1] = 0x00;
    int64_t pos1 = 0;
    DffDecode(ii, &pos1);

    ii[0] = 0x7F;
    ii[1] = 0x00;
    int64_t neg1 = 0;
    DffDecode(ii, &neg1);

    ii[0] = 0xFF;
    ii[1] = 0x00;
    int64_t pos127 = 0;
    DffDecode(ii, &pos127);

    ii[0] = 0x81;
    ii[1] = 0x7F;
    int64_t neg127 = 0;
    DffDecode(ii, &neg127);

    ii[0] = 0x80;
    ii[1] = 0x01;
    int64_t pos128 = 0;
    DffDecode(ii, &pos128);

    ii[0] = 0x80;
    ii[1] = 0x7F;
    int64_t neg128 = 0;
    DffDecode(ii, &neg128);

    ii[0] = 0xF1;
    ii[1] = 0x04;
    int64_t yyy = 0;
    DffDecode(ii, &yyy);

    ii[0] = 0xD5;
    ii[1] = 0x8a;
    ii[2] = 0x52;
    int64_t xxx = 0;
    DffDecode(ii, &xxx);


    ulong out;
    int64_t ddw;
    uchar n;

    ddw = 1;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n 1 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -1;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n -1 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = 127;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n 127 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -127;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n -127 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = 128;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n 128 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -128;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n -128 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

/*
    ddw = -1;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -10;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -100;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -1000;
    memset(&out, 0, sizeof(out));
    n = EncodeInt(ddw, (uint8_t *)&out);
    MonitorString("\n "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);
*/


    ddw = 1;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n 1 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -1;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n -1 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = 127;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n 127 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -127;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n -127 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

/*
    ddw = 128;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n 128 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -128;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n -128 "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -100;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);

    ddw = -1000;
    memset(&out, 0, sizeof(out));
    n = DffEncode(ddw, (uint8_t *)&out);
    MonitorString("\n "); MonitorCharDec(n); MonitorString(" "); MonitorLongHex(out);
*/

  if (1+1 == 2) return GetDouble2(0, true);
  