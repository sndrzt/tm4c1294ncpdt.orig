
// адреса страниц DataFlash
typedef enum
{
  FLASH_BEGIN           = 0,

  PRIVATE               = FLASH_BEGIN,
  GLOBAL                = PRIVATE + 1,
  LOGICAL               = GLOBAL + 1,

  GROUPS                = LOGICAL + 1,

  PUBLIC_TRF            = GROUPS + sizeof(group)*bGROUPS/wLEAF_BYTES + 1,
  PUBLIC_TRF_PREV_MON   = PUBLIC_TRF + 1,
  TARIFFS_MODE          = PUBLIC_TRF_PREV_MON + 1,

  DAY_ZONE              = TARIFFS_MODE + 1,

  ZONES_POW             = DAY_ZONE + 1,
  ZONES_ENG             = ZONES_POW + 12*bMODES,

  PERIOD_POW            = ZONES_ENG + 12*bMODES,
  PERIOD_ENG            = PERIOD_POW + 1,

  RELAXS_TARIFF         = PERIOD_ENG + 1,
  RELAXS                = RELAXS_TARIFF + 1,

  GAPS                  = RELAXS + sizeof(relaxs)/wLEAF_BYTES + 1,

  DECRET                = GAPS + sizeof(gaps)/wLEAF_BYTES + 1,
  SUMMER                = DECRET + 1,
  WINTER                = SUMMER + 1,

  TRANS_ENG             = WINTER + 1,
  TRANS_CNT             = TRANS_ENG + DOUBLE_CAN_PAGES,
  PULSE_HOU             = TRANS_CNT + DOUBLE_CAN_PAGES,
  PULSE_MNT             = PULSE_HOU + DOUBLE_CAN_PAGES,

  COUNT                 = PULSE_MNT + DOUBLE_CAN_PAGES,
  LOSSE                 = COUNT + DOUBLE_CAN_PAGES,
  LEVEL                 = LOSSE + DOUBLE_CAN_PAGES,

  IMPHOUCAN             = LEVEL + DOUBLE_CAN_PAGES,

  IMPDAYCAN             = IMPHOUCAN + IMPHOUCAN_PAGES,
  IMPMONCAN             = IMPDAYCAN + bIMPULSE_CAN*bDAYS,
  POWDAYGRP             = IMPMONCAN + bIMPULSE_CAN*bMONTHS,
  POWMONGRP             = POWDAYGRP + bPOWER_GRP*bDAYS,
  CNTMONCAN             = POWMONGRP + bPOWER_GRP*bMONTHS,

  DEFDAYCAN             = CNTMONCAN + DOUBLE_CAN_PAGES*bMONTHS,
  DEFMONCAN             = DEFDAYCAN + bIMPULSE_CAN*bDAYS,

  PORTS                 = DEFMONCAN + bIMPULSE_CAN*bMONTHS,
  LOCAL_DISABLE         = PORTS + 1,

  MAJOR_IN_DELAY        = LOCAL_DISABLE + 1,
  MINOR_IN_DELAY        = MAJOR_IN_DELAY + 1,

  ENBL_CAN              = MINOR_IN_DELAY + 1,
  ENBL_PRT_HOU          = ENBL_CAN + 1,
  CTRL_HOU              = ENBL_PRT_HOU + 1,
  RECALC_HOU            = CTRL_HOU + 1,

  PHONES                = RECALC_HOU + 1,
  MAX_CONNECT           = PHONES + sizeof(mpphPhones)/wLEAF_BYTES + 1,
  CUSTOM_MODEM          = MAX_CONNECT + 1,

  KEYS                  = CUSTOM_MODEM + 1,

  ADDRESS1              = KEYS + sizeof(mpphKeys)/wLEAF_BYTES + 1,
  ADDRESS2              = ADDRESS1 + sizeof(mpdwAddress1)/wLEAF_BYTES + 1,

  OBJECT_NAME           = ADDRESS2 + sizeof(mpdwAddress2)/wLEAF_BYTES + 1,
  CANALS_NAME           = OBJECT_NAME + 1,
  GROUPS_NAME           = CANALS_NAME + sizeof(mpszCanalsName)/wLEAF_BYTES + 1,

  START_REL_CAN         = GROUPS_NAME + sizeof(mpszGroupsName)/wLEAF_BYTES + 1,
  START_ABS16_CAN       = START_REL_CAN + 1,
  START_ABS32_CAN       = START_ABS16_CAN + 1,
  START_CAN             = START_ABS32_CAN + 1,
  STOP_CAN              = START_CAN + 1,
  STOP_AUX_CAN          = STOP_CAN + 1,

  PARAMS                = STOP_AUX_CAN + 1,
  PARAMS_DIV            = PARAMS + sizeof(mpdiParam)/wLEAF_BYTES + 1,
  ENBL_PARAMS           = PARAMS_DIV + sizeof(mpreParamsDiv)/wLEAF_BYTES + 1,

  PARAMS_VALUES         = ENBL_PARAMS + 1,

  KEYS_LEVEL_B          = PARAMS_VALUES + PARAMS_PAGES*wTIMES,
  SHORT_PROFILE_C       = KEYS_LEVEL_B + 1,

  EXT_4_ENBL_CAN        = SHORT_PROFILE_C + 1,
  EXT_4_MON_VALUES      = EXT_4_ENBL_CAN + 1,

  EXT_4T_MON_VALUES     = EXT_4_MON_VALUES + VALUE4_CAN_PAGES*bMONTHS,

  EXT_5_VALUES          = EXT_4T_MON_VALUES + VALUE4T_CAN_PAGES*bMONTHS,

  EXT_6_BOX_VALUES      = EXT_5_VALUES + VALUE5_CAN_PAGES,
  EXT_6_MON_VALUES      = EXT_6_BOX_VALUES + VALUE6_CAN_PAGES,

  SET_TIME              = EXT_6_MON_VALUES + VALUE6_CAN_PAGES*bMONTHS,
  SET_DATE              = SET_TIME + 1,
  SET_GROUPS            = SET_DATE + 1,
  SET_PASSWORD          = SET_GROUPS + 1,

  CORRECT1              = SET_PASSWORD + 1,

  KEY_RECORD            = CORRECT1 + sizeof(Correct1)/wLEAF_BYTES + 1,
  SYS_RECORD            = KEY_RECORD + bRECORD_SIZE,
  DIG_RECORD            = SYS_RECORD + bRECORD_SIZE,
  IMP_RECORD            = DIG_RECORD + bRECORD_SIZE,
  MOD_RECORD            = IMP_RECORD + bRECORD_SIZE,
  AUX_RECORD            = MOD_RECORD + bRECORD_SIZE,

  FLASH_END             = AUX_RECORD + bRECORD2_SIZE
} flash;
