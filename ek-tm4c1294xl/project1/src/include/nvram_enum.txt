
// адреса страниц Non-volatile RAM
typedef enum
{
  NVRAM_BEGIN           = 0,

  LABEL_GLOBAL          = NVRAM_BEGIN,

  REALTIME_TIMES        = LABEL_GLOBAL + sizeof(mpbLabelGlobal) + bNVRAM_FOOTER,
  REALTIME_VALUES       = REALTIME_TIMES + sizeof(tuple2time) + bNVRAM_FOOTER,

  PTR_MNT               = REALTIME_VALUES + sizeof(realtime1) + bNVRAM_FOOTER,
  PTR_HHR               = PTR_MNT + sizeof(tuple2uint) + bNVRAM_FOOTER,
  PTR_DAY               = PTR_HHR + sizeof(tuple2uint) + bNVRAM_FOOTER,
  PTR_MON               = PTR_DAY + sizeof(tuple2uint) + bNVRAM_FOOTER,
  PTR_TIM               = PTR_MON + sizeof(tuple2uint) + bNVRAM_FOOTER,

  PUBLIC_TRF            = PTR_TIM + sizeof(tuple2uint) + bNVRAM_FOOTER,
  PUBLIC_TRF_PREV_MON   = PUBLIC_TRF + sizeof(bool) + bNVRAM_FOOTER,
  OLD_TRF_MODE          = PUBLIC_TRF_PREV_MON + sizeof(bool) + bNVRAM_FOOTER,

  ZONES_POW             = OLD_TRF_MODE + sizeof(uchar) + bNVRAM_FOOTER,
  ZONES_ENG             = ZONES_POW + (sizeof(zone) + bNVRAM_FOOTER)*12*bMODES,

  ZONE_DAY              = ZONES_ENG + (sizeof(zone) + bNVRAM_FOOTER)*12*bMODES,

  PERIOD_TRF_POW        = ZONE_DAY + sizeof(zone) + bNVRAM_FOOTER,
  PERIOD_TRF_ENG        = PERIOD_TRF_POW + sizeof(mpePeriodTrfPow) + bNVRAM_FOOTER,

  RELAXS_FLAG           = PERIOD_TRF_ENG + sizeof(mpePeriodTrfEng) + bNVRAM_FOOTER,
  RELAXS_TARIFF         = RELAXS_FLAG + sizeof(bool) + bNVRAM_FOOTER,
  RELAXS                = RELAXS_TARIFF + sizeof(uchar) + bNVRAM_FOOTER,

  GAPS_FLAG             = RELAXS + sizeof(relaxs) + bNVRAM_FOOTER,
  GAPS                  = GAPS_FLAG + sizeof(bool) + bNVRAM_FOOTER,

  IMPMNTCAN             = GAPS + sizeof(gaps) + bNVRAM_FOOTER,

  IMPHOUCAN_BUFF        = IMPMNTCAN + (sizeof(uint)*bCANALS + bNVRAM_FOOTER)*bMINUTES,
  IMPDAYCAN_BUFF        = IMPHOUCAN_BUFF + sizeof(uint)*bCANALS + bNVRAM_FOOTER,
  IMPMONCAN_BUFF        = IMPDAYCAN_BUFF + sizeof(impulse)*bCANALS + bNVRAM_FOOTER,
  IMPABSCAN_BUFF        = IMPMONCAN_BUFF + sizeof(impulse)*bCANALS + bNVRAM_FOOTER,
  POWDAYGRP_BUFF        = IMPABSCAN_BUFF + sizeof(impulse)*bCANALS + bNVRAM_FOOTER,
  POWMONGRP_BUFF        = POWDAYGRP_BUFF + sizeof(power)*bGROUPS + bNVRAM_FOOTER,
  CNTMONCAN_BUFF        = POWMONGRP_BUFF + sizeof(power)*bGROUPS + bNVRAM_FOOTER,

  ENBL_KEYS             = CNTMONCAN_BUFF + sizeof(double)*bCANALS + bNVRAM_FOOTER,
  DIGITALS              = ENBL_KEYS + sizeof(bool) + bNVRAM_FOOTER,

  MAX_CONNECT           = DIGITALS + sizeof(mpdiDigital) + bNVRAM_FOOTER,
  CUSTOM_MODEM          = MAX_CONNECT + sizeof(uchar) + bNVRAM_FOOTER,

  SEPARATE_CAN          = CUSTOM_MODEM + sizeof(bool) + bNVRAM_FOOTER,
  SHOW_MESSAGES         = SEPARATE_CAN + sizeof(bool) + bNVRAM_FOOTER,
  HIDE_MESSAGES         = SHOW_MESSAGES + sizeof(bool) + bNVRAM_FOOTER,
  CONTROL_TIME          = HIDE_MESSAGES + sizeof(bool) + bNVRAM_FOOTER,
  MANAGE_TIME           = CONTROL_TIME + sizeof(bool) + bNVRAM_FOOTER,

  FIRST_RESET           = MANAGE_TIME + sizeof(bool) + bNVRAM_FOOTER,
  ENBL_WDT              = FIRST_RESET + sizeof(bool) + bNVRAM_FOOTER,

  SET_TIME              = ENBL_WDT + sizeof(bool) + bNVRAM_FOOTER,
  SET_DATE              = SET_TIME + sizeof(bool) + bNVRAM_FOOTER,
  SET_GROUPS            = SET_DATE + sizeof(bool) + bNVRAM_FOOTER,
  SET_PASSWORD          = SET_GROUPS + sizeof(bool) + bNVRAM_FOOTER,

  EXT_4_FLAG            = SET_PASSWORD + sizeof(bool) + bNVRAM_FOOTER,
  EXT_4_MONTHS          = EXT_4_FLAG + sizeof(bool) + bNVRAM_FOOTER,
  EXT_4T_FLAG           = EXT_4_MONTHS + sizeof(bool) + bNVRAM_FOOTER,
  EXT_4T_MONTHS         = EXT_4T_FLAG + sizeof(bool) + bNVRAM_FOOTER,
  EXT_5_FLAG            = EXT_4T_MONTHS + sizeof(bool) + bNVRAM_FOOTER,
  EXT_6_FLAG            = EXT_5_FLAG + sizeof(bool) + bNVRAM_FOOTER,

  DSBL_ESC_U            = EXT_6_FLAG + sizeof(bool) + bNVRAM_FOOTER,
  DSBL_ESC_V            = DSBL_ESC_U + sizeof(bool) + bNVRAM_FOOTER,
  DSBL_ESC_S            = DSBL_ESC_V + sizeof(bool) + bNVRAM_FOOTER,
  MNT_ESC_S             = DSBL_ESC_S + sizeof(bool) + bNVRAM_FOOTER,
  EXTENDED_ESC_U        = MNT_ESC_S + sizeof(bool) + bNVRAM_FOOTER,
  EXTENDED_ESC_V        = EXTENDED_ESC_U + sizeof(bool) + bNVRAM_FOOTER,
  EXTENDED_ESC_S        = EXTENDED_ESC_V + sizeof(bool) + bNVRAM_FOOTER,

  ESC_S_VALUE           = EXTENDED_ESC_S + sizeof(bool) + bNVRAM_FOOTER,
  ESC_S_TIME            = ESC_S_VALUE + sizeof(mpdbEsc_S) + bNVRAM_FOOTER,
  ESC_V_VALUE           = ESC_S_TIME + sizeof(mptiEsc_S) + bNVRAM_FOOTER,
  ESC_V_TIME            = ESC_V_VALUE + sizeof(mpdbEsc_V) + bNVRAM_FOOTER,
  ESC_U_VALUE           = ESC_V_TIME + sizeof(mptiEsc_V) + bNVRAM_FOOTER,
  ESC_U_TIME            = ESC_U_VALUE + sizeof(mptiEsc_U1) + bNVRAM_FOOTER,

  EXT_7_DAY_VALUES      = ESC_U_TIME + sizeof(mptiEsc_U2) + bNVRAM_FOOTER,

  MACHINES_ESC          = EXT_7_DAY_VALUES + (sizeof(mpCntDayCan7) + bNVRAM_FOOTER)*bDAYS,
  BLOCK_ESC             = MACHINES_ESC + sizeof(bool) + bNVRAM_FOOTER,

  STRICT_UNI            = BLOCK_ESC + sizeof(bool) + bNVRAM_FOOTER,
  MAX_DELAY_UNI         = STRICT_UNI + sizeof(bool) + bNVRAM_FOOTER,
  REPEAT_FLOW_INI       = MAX_DELAY_UNI + sizeof(bool) + bNVRAM_FOOTER,
  ENBL_PASS_INI         = REPEAT_FLOW_INI + sizeof(bool) + bNVRAM_FOOTER,

  ENBL_CURRENT          = ENBL_PASS_INI + sizeof(bool) + bNVRAM_FOOTER,
  ENBL_PROFILE          = ENBL_CURRENT + sizeof(bool) + bNVRAM_FOOTER,
  TIMEOUT_CURRENT       = ENBL_PROFILE + sizeof(bool) + bNVRAM_FOOTER,
  TIMEOUT_PROFILE       = TIMEOUT_CURRENT + sizeof(bool) + bNVRAM_FOOTER,

  DSBL_REFILL           = TIMEOUT_PROFILE + sizeof(bool) + bNVRAM_FOOTER,
  USE_BOUNDS            = DSBL_REFILL + sizeof(bool) + bNVRAM_FOOTER,
  MAX_REPEATS           = USE_BOUNDS + sizeof(bool) + bNVRAM_FOOTER,
  RECALC_ALWAYS         = MAX_REPEATS + sizeof(bool) + bNVRAM_FOOTER,

  OPEN_CALC             = RECALC_ALWAYS + sizeof(bool) + bNVRAM_FOOTER,

  FLOW_PORT_FROM        = OPEN_CALC + sizeof(bool) + bNVRAM_FOOTER,
  MAX_FLOW_DELAY        = FLOW_PORT_FROM + sizeof(bool) + bNVRAM_FOOTER,
  FLOW_PORT_TO          = MAX_FLOW_DELAY + sizeof(bool) + bNVRAM_FOOTER,

  PARAMS_FLAG           = FLOW_PORT_TO + sizeof(bool) + bNVRAM_FOOTER,
  MNT_PARAMS            = PARAMS_FLAG + sizeof(bool) + bNVRAM_FOOTER,

  FIX_PARAMS_BUGS       = MNT_PARAMS + sizeof(bool) + bNVRAM_FOOTER,
  USE_PARAMS_DIV        = FIX_PARAMS_BUGS + sizeof(bool) + bNVRAM_FOOTER,

  KEYS_LEVEL_B          = USE_PARAMS_DIV + sizeof(bool) + bNVRAM_FOOTER,
  SHORT_PROFILE_C       = KEYS_LEVEL_B + sizeof(uchar) + bNVRAM_FOOTER,

  CORRECT2_FLAG         = SHORT_PROFILE_C + sizeof(bool) + bNVRAM_FOOTER,

  KEY_INDEX             = CORRECT2_FLAG + sizeof(bool) + bNVRAM_FOOTER,
  SYS_INDEX             = KEY_INDEX + sizeof(ulong) + bNVRAM_FOOTER,
  DIG_INDEX             = SYS_INDEX + sizeof(ulong) + bNVRAM_FOOTER,
  IMP_INDEX             = DIG_INDEX + sizeof(ulong) + bNVRAM_FOOTER,
  MOD_INDEX             = IMP_INDEX + sizeof(ulong) + bNVRAM_FOOTER,
  PH2_INDEX             = MOD_INDEX + sizeof(ulong) + bNVRAM_FOOTER,
  AUX_INDEX             = PH2_INDEX + sizeof(ulong) + bNVRAM_FOOTER,

  NVRAM_END             = AUX_INDEX + sizeof(ulong) + bNVRAM_FOOTER
} nvram;
